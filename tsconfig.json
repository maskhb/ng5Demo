/* 详细解释可以参考 https://www.w3cschool.cn/typescript/typescript-compiler-options.html  */
{
  "compileOnSave": true,/* 可以被忽略，这时编译器会使用默认值。 */
  "compilerOptions": {/* 在最顶层设置compileOnSave标记，可以让IDE在保存文件的时候根据tsconfig.json重新生成文件。 */
    "outDir": "./dist/out-tsc",
    "sourceMap": true,/* 生成相应的'.map'文件。 用来压缩体积,对应位置*/
    "declaration": false,/* 生成相应的'.d.ts'文件。 d.ts 文件来标记某个 js 库里面对象的类型 */
    "moduleResolution": "node",/* 决定如何处理模块。或者是'node'对于Node.js/io.js，或者是'classic'（默认） */
    "emitDecoratorMetadata": true,/* 给源码里的装饰器声明加上设计类型元数据 */
    "experimentalDecorators": true,/* 实验性启用ES7装饰器支持。*/
    "target": "es5",/* 指定生成哪个模块系统代码：'commonjs'，'amd'，'system'，或 'umd'或'es2015'。只有'amd'和'system'能和--outFile一起使用。当目标是ES5或以下的时候不能使用'es2015'。 */
    "typeRoots": [/* 要包含的类型声明文件路径列表。 */
      "node_modules/@types"
    ],
    "lib": [/* 编译过程中需要引入的库文件的列表。 */
      "es2017",
      "dom"
    ]
  }
}
